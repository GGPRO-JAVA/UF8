import{_ as c,C as r,c as o,o as p,a4 as d,G as e,j as s,w as i,a}from"./chunks/framework.DIQKRKrM.js";const _=JSON.parse('{"title":"4. Classes abstractes","description":"","frontmatter":{},"headers":[],"relativePath":"4-abstract.md","filePath":"4-abstract.md"}'),h={name:"4-abstract.md"};function k(m,t,b,g,u,E){const l=r("PluginTabsTab"),n=r("PluginTabs");return p(),o("div",null,[t[2]||(t[2]=d('<h1 id="_4-classes-abstractes" tabindex="-1">4. Classes abstractes <a class="header-anchor" href="#_4-classes-abstractes" aria-label="Permalink to &quot;4. Classes abstractes&quot;">​</a></h1><p>Una classe abstracta és <strong>una classe que declara l&#39;existència d&#39;alguns mètodes però no la seua implementació</strong> (és a dir, conté la capçalera del mètode però no el seu codi). Els mètodes sense implementar són mètodes abstractes.</p><p>Una classe abstracta pot contindre tant mètodes abstractes (sense implementar) com no abstractes (implementats). Però almenys un ha de ser abstracte. Per a declarar una classe o mètode com a abstracte s&#39;utilitza el modificador <strong>abstract</strong>.</p><div class="warning custom-block"><p class="custom-block-title">ATENCIÓ</p><p><strong>Una classe abstracta no es pot instanciar</strong>, però <strong>sí es pot heretar</strong>. Les subclasses hauran d&#39;implementar obligatòriament el codi dels mètodes abstractes (llevat que també es declaren com a abstractes).</p></div><p>Les <strong>classes abstractes</strong> són útils quan necessitem definir una forma generalitzada de classe que serà compartida per les subclasses, deixant part del codi en la classe abstracta (mètodes “normals”) i delegant una altra part en les subclasses (mètodes abstractes).</p><div class="warning custom-block"><p class="custom-block-title">ATENCIÓ</p><p>No poden declarar-se constructors o mètodes estàtics abstractes.</p></div><p>La finalitat principal d&#39;una classe abstracta és crear una classe heretada a partir d&#39;ella. Per això, en la pràctica és obligatori aplicar herència (si no, la classe abstracta no serveix per a res). El cas contrari és una classe final, que no pot heretar-se com ja hem vist. Per tant <strong>una classe no pot ser abstract i final al mateix temps</strong>.</p><p>Per exemple, aquesta classe abstracta Principal ten dos mètodes: un concret i un altre abstracte.</p>',8)),e(n,null,{default:i(()=>[e(l,{label:"Java"},{default:i(()=>t[0]||(t[0]=[s("div",{class:"language-java vp-adaptive-theme"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"},"java"),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"public"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," abstract"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," class"),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," Principal"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," {")]),a(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"  // Mètode concret amb implementació")]),a(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"  public"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," void"),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," metodeConcret"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"() {")]),a(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    ...")]),a(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"  }")]),a(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"  // Mètode abstracte sense implementació")]),a(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"  public"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," abstract"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," void"),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," metodeAbstracte"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"();")]),a(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"}")])])])],-1)])),_:1,__:[0]})]),_:1}),t[3]||(t[3]=s("p",null,"Aquesta subclasse hereta de Principal tots dos mètodes, però està obligada a implementar el codi del mètode abstracte.",-1)),e(n,null,{default:i(()=>[e(l,{label:"Java"},{default:i(()=>t[1]||(t[1]=[s("div",{class:"language-java vp-adaptive-theme"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"},"java"),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"class"),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," Secundària"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," extends"),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," Principal"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," {")]),a(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"  // Implementació concreta")]),a(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"  public"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," void"),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," metodeAbstracte"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"() {")]),a(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    ...")]),a(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"  }")]),a(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"}")])])])],-1)])),_:1,__:[1]})]),_:1})])}const v=c(h,[["render",k]]);export{_ as __pageData,v as default};
