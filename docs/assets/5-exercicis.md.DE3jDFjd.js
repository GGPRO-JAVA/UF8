import{_ as c,C as o,c as u,o as p,a4 as n,j as e,G as s,a as i,w as t}from"./chunks/framework.DIQKRKrM.js";const x=JSON.parse('{"title":"Exercicis","description":"","frontmatter":{},"headers":[],"relativePath":"5-exercicis.md","filePath":"5-exercicis.md"}'),d={name:"5-exercicis.md"},m={class:"tip custom-block"},g={class:"tip custom-block"};function b(h,a,f,q,v,E){const l=o("PluginTabsTab"),r=o("PluginTabs");return p(),u("div",null,[a[11]||(a[11]=n('<h1 id="exercicis" tabindex="-1">Exercicis <a class="header-anchor" href="#exercicis" aria-label="Permalink to &quot;Exercicis&quot;">​</a></h1><h2 id="exercicis-nivell-basic" tabindex="-1">Exercicis - Nivell bàsic <a class="header-anchor" href="#exercicis-nivell-basic" aria-label="Permalink to &quot;Exercicis - Nivell bàsic&quot;">​</a></h2><h3 id="exercici-1" tabindex="-1">Exercici 1 <a class="header-anchor" href="#exercici-1" aria-label="Permalink to &quot;Exercici 1&quot;">​</a></h3><p>Una empresa necessita gestionar els vehicles de què disposa. Cada vehicle té unes dades bàsiques, i segons el tipus (cotxe, camió, moto...), hi ha informació i comportaments particulars.</p><p>a) Crea una classe Vehicle amb atributs per a la matricula, la marca, el model model i el tipus de vehicle (per exemple, &quot;cotxe&quot; o &quot;moto&quot;).<br> b) Afig un mètode que mostre tota la informació del vehicle, tenint en compte que, en funció del tipus, s&#39;haurà de mostrar alguna informació pròpia d&#39;eixe tipus (caldrà afegir-ho com a atributs, amb valors aleatoris establits en inicialitzar un objecte):</p><ul><li>Si el tipus és &quot;camió&quot;, també ha de mostrar el pes màxim admissible.</li><li>Si és &quot;moto&quot;, ha de mostrar si pot circular per autopista.</li><li>Si és &quot;cotxe&quot;, ha de mostrar el nombre de places.</li></ul><p>c) En la classe principal, crea vehicles de diversos tipus i mostra’ls per pantalla.</p>',7)),e("div",m,[a[1]||(a[1]=e("p",{class:"custom-block-title"},"✏️ Reflexió",-1)),a[2]||(a[2]=e("p",null,[i("Tot i que aquest sistema funciona, "),e("strong",null,"no és una bona solució des del punt de vista de la programació orientada a objectes"),i(". Per què?")],-1)),a[3]||(a[3]=e("p",null,"Molts alumnes pensen en fer una estructura com aquesta dins de mostrarInfo():",-1)),s(r,null,{default:t(()=>[s(l,{label:"Java"},{default:t(()=>a[0]||(a[0]=[e("div",{class:"language-java vp-adaptive-theme"},[e("button",{title:"Copy Code",class:"copy"}),e("span",{class:"lang"},"java"),e("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[e("code",null,[e("span",{class:"line"},[e("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"if"),e("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," (tipus."),e("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"equals"),e("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"("),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'"cotxe"'),e("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},")) {")]),i(`
`),e("span",{class:"line"},[e("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"    // Mostrar places")]),i(`
`),e("span",{class:"line"},[e("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"} "),e("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"else"),e("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," if"),e("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," (tipus."),e("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"equals"),e("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"("),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'"camio"'),e("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},")) {")]),i(`
`),e("span",{class:"line"},[e("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"    // Mostrar pes màxim")]),i(`
`),e("span",{class:"line"},[e("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"} "),e("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"else"),e("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," if"),e("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," (tipus."),e("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"equals"),e("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"("),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'"moto"'),e("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},")) {")]),i(`
`),e("span",{class:"line"},[e("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"    // Mostrar si pot anar per autopista")]),i(`
`),e("span",{class:"line"},[e("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"}")])])])],-1)])),_:1,__:[0]})]),_:1}),a[4]||(a[4]=e("p",null,"Aquesta solució presenta diversos problemes:",-1)),a[5]||(a[5]=e("ul",null,[e("li",null,"El mètode usat per a mostrar informació (i qualsevol altre que comprove el tipus per a fer una cosa o una altra) coneix massa detalls: ha de saber com es comporten tots els tipus de vehicle."),e("li",null,"La classe Vehicle tindrà atributs que no seran usats per tots els objectes (les motos no necessiten un atribut per al nombre de places ni per al pes màxim admissible)."),e("li",null,"Viola el principi d’obert/tancat: si apareix un nou tipus de vehicle (per exemple, bicicleta elèctrica), caldrà modificar tots els mètodes que facen la comprovació de tipus."),e("li",null,"No s’aprofita el polimorfisme: cada objecte hauria de saber com mostrar la seua pròpia informació, no delegar-ho tot a un mètode amb condicions.")],-1)),a[6]||(a[6]=e("p",null,"Tots aquests problemes seran més greus a mesura que s'afegeixen més tipus de vehicles.",-1))]),a[12]||(a[12]=n('<p>Ara corregirem aquesta estructura fent ús d’herència i classes abstractes.</p><p>d) Reestructura el codi:</p><ul><li>Fes que Vehicle siga una classe abstracta amb els atributs bàsics: matricula, marca i model.</li><li>Declara un mètode abstracte per a mostrar la informació.</li></ul><p>e) Crea les subclasses:</p><ul><li>Cotxe, amb un atribut per al nombre de places.</li><li>Camio, amb un atribut per al pes màxim.</li><li>Moto, amb un atribut que determine si pot anar per autopista.</li></ul><p>Cada subclasse ha de sobreescriure el mètode per mostrar la informació corresponent.</p><p>f) En la classe principal, crea un llistat de vehicles dels tres tipus i mostra la informació de tots ells mitjançant una única crida al mètode definit en un bucle.<br> g) Encapsula el codi.<br> h) Afig una classe Concessionari que gestione una col·lecció de vehicles. Inclou mètodes com:</p><ul><li>Afegir vehicles a la col·lecció</li><li>Mostrar la informació de tots els vehicles</li><li>Fes un recompte de quants vehicles hi ha de cada tipus i mostrar-ho per pantalla.</li></ul><p>i) Fes ús de la classe Concessionari des del main, i prova els seus mètodes.</p><h3 id="exercici-2" tabindex="-1">Exercici 2 <a class="header-anchor" href="#exercici-2" aria-label="Permalink to &quot;Exercici 2&quot;">​</a></h3><p>Estàs desenvolupant un sistema per gestionar els productes d’una tenda d’informàtica. Els productes poden ser de diferents tipus (processadors, discos durs, targetes gràfiques, etc.) i alguns comparteixen característiques comunes, com per exemple la capacitat d’emmagatzematge o el consum energètic. Cal tindre en compte, que els distints productes tindran informació sobre particular ells (els discs durs tindran una certa capacitat d&#39;emmagatzemament, per exemple) i, com tenen funcions diferents dins de l&#39;àmbit informàtic, tindran també comportaments (funcions) diferents. Per tant, farem ús de l&#39;herència i crearem una classe base, de la qual heretaran distintes subclasses.</p><p>a) Crea una classe ProducteInformatic amb els atributs bàsics següents: un codi identificatiu, un nom i un preu per unitat.<br> b) Crea distintes subclasses de ProducteInformatic: DiscDur, GPU i CPU.</p><ul><li>DiscDur tindrà: <ul><li>un atribut enter per a la capacitat (en GB).</li><li>una cadena per al tipus (HDD o SSD).</li><li>un enter per a la velocitat de lectura/escriptura.</li></ul></li><li>GPU tindrà: <ul><li>un atribut enter per a la VRAM.</li><li>un booleà que indica si té accés a treballar amb IA.</li><li>un booleà que indica si permet fer <em>overclock</em>.</li></ul></li><li>CPU tindrà: <ul><li>un enter per al nombre de nuclis.</li><li>un decimal per a la velocitat (en GHz).</li><li>un booleà que indica si permet fer <em>overclock</em>.</li></ul></li></ul><p>c) Implementa el constructor de totes les classes. Assegura&#39;t que cada objecte, independentment del producte, té un codi diferent. A més, este serà invariable i no es podrà modificar una vegada queda establit per primera vegada.</p><p>Ara volem un mètode que mostre tota la informació d&#39;un producte. Com és una funcionalitat comuna a totes les subclasses, però diferent en cadascuna, caldrà fer ús de la abstracció.</p><p>d) Fes que la classe pare siga abstracta, i declara el mètode abstracte encarregat de mostrar tota la informació d&#39;un producte. Implementa el mètode en les subclasses.</p><p>Ara volem assignar diversos comportaments simulats a les subclasses. Perquè si bé la funcionalitat de mostrar informació és comuna, cada dispositiu informàtic pot fer certes funcionalitats que la resta no:</p>',17)),e("div",g,[a[8]||(a[8]=e("p",{class:"custom-block-title"},"✏️ Reflexió",-1)),a[9]||(a[9]=e("p",null,[i("Podríem "),e("strong",null,"implementar cada mètode en les classes corresponents"),i(", però no seria una pràctica correcta des del punt de vista de la Programació Orientada a Objectes. Particularment, pel que fa al polimorfisme: "),e("strong",null,"no podríem tractar els objectes de forma genèrica a través d'un comportament comú"),i(".")],-1)),a[10]||(a[10]=e("p",null,[i("Per tal d'aplicar bones pràctiques, cal fer ús de l'"),e("strong",null,"herència múltiple"),i(".")],-1)),s(r,null,{default:t(()=>[s(l,{label:"Java"},{default:t(()=>a[7]||(a[7]=[e("p",null,[i("En Java, com ja s'ha vist en el tema, no hi ha herència múltiple com a tal, i s'usa el concepte d'"),e("strong",null,"interfície"),i(".")],-1)])),_:1,__:[7]})]),_:1})]),a[13]||(a[13]=n(`<p>e) Crea les següents funcionalitats:</p><ul><li>Formatejar</li><li>Overclock</li><li>AccelerarIA</li><li>CalcularVelocitat</li></ul><p>f) Fes que cada subclasse implemente les funcionalitats corresponents (els comportaments de les funcions ha de ser molt senzill, únicament mostrar un missatge per pantalla):</p><ul><li>DiscDur <ul><li>→ Formatejar</li></ul></li><li>CPU <ul><li>→ Overclock</li><li>→ AccelerarIA</li></ul></li><li>GPU <ul><li>→ Overclock</li><li>→ CalcularVelocitat</li></ul></li></ul><p>g) En la classe principal:</p><ul><li>Crea una llista de ProducteInformatic.</li><li>Recorre la llista i mostra la informació de cada producte (codi, nom, preu).</li><li>Fes que s&#39;executen, també, la resta de mètodes que implementen (caldrà comprovar si cada objecte és instància ).</li></ul><p>h) Afig un nou comportament Eficient que comprove si un producte (CPU o GPU) és eficient o no. Caldrà afegir un nou atribut en estes classes, que contindrà el consum en wats, i al qual se li assignarà un valor aleatori comprés entre 200 i 700.</p><ul><li>Es considerarà que una CPU és eficient si el consum per nucli és inferior a 100 wats.</li><li>Es considerarà que una GPU és eficient si el consum per GB de VRAM és inferior a 50 wats.</li></ul><h2 id="exercicis-nivell-mitja" tabindex="-1">Exercicis - Nivell mitjà <a class="header-anchor" href="#exercicis-nivell-mitja" aria-label="Permalink to &quot;Exercicis - Nivell mitjà&quot;">​</a></h2><h3 id="exercici-3" tabindex="-1">Exercici 3 <a class="header-anchor" href="#exercici-3" aria-label="Permalink to &quot;Exercici 3&quot;">​</a></h3><p>L&#39;associació <em>Vida i Natura</em> és una organització sense ànim de lucre que es dedica al rescat, acollida i adopció d’animals domèstics i exòtics. Disposa de diverses instal·lacions, com ara una zona d’estada per a mamífers, una àrea especial per a aus i una petita consulta veterinària. Com que el nombre d’animals atesos ha crescut molt en els últims mesos, el personal ha decidit informatitzar el registre i el seguiment dels animals. Per a fer-ho, cal desenvolupar una <strong>aplicació que permeta gestionar els animals allotjats en el refugi</strong>.</p><p>Els animals que s’atenen habitualment són de <strong>tres espècies</strong>: <strong>gossos</strong>, <strong>gats</strong> i <strong>ocells</strong>. Cada animal té assignat un <strong>identificador únic</strong> (assignat automàticament en incorporar-se al refugi), un <strong>nom</strong>, una <strong>edat</strong> (establida segons la valoració veterinària en el moment de l’entrada), i un indicador del seu estat actual de <strong>vacunació</strong> (poden estar al dia en les vacunes o poden no estar-ho).</p><p>Cal tindre en compte que <strong>els gossos i els ocells</strong> són molt diferents uns d&#39;altres en funció de la <strong>raça</strong> a la qual pertanyen i, per tant, caldrà afegir aquesta informació al seu registre. Açò no ocorre amb els gats (perquè, a més a més, la seua raça és complexa de determinar).</p><p>Pel seu compte, hi ha <strong>gats</strong> que presenten <strong>problemes de conducta</strong> (agressivitat i hiperactivitat, entre d&#39;altres), cosa que s&#39;haurà de tindre en compte si es volguera adoptar. En aquest sentit, pel que fa als <strong>ocells</strong>, <strong>no tots podran ser adoptats</strong>, perquè alguns són de races salvatges i la legislació en matèria animal ho prohibeix (per a simplificar, aquest serà un paràmetre independent de la raça).</p><p>Per últim, dels <strong>ocells</strong> cal tindre en compte la seua <strong>capacitat de vol</strong>, ja que alguns (ja siga per la raça o per alguna condició particular) no poden. Açò es té en compte a l&#39;hora d&#39;entrenar-los per a algunes exhibicions de vol que es porten a cap en el refugi.</p><p>A més, cada espècie d’animal pot fer activitats concretes:</p><ul><li>Totes les espècies registrades (gossos, gats i ocells) tenen opció a ser adoptats, però <strong>en un futur podria arribar al refugi alguna nova espècie que</strong> siga 100% salvatge i <strong>no siga apta per a adoptar en ningun cas</strong>. A més, de les espècies actuals, <strong>cal tindre en compte</strong>: <ul><li>Un animal només es pot <strong>adoptar</strong> si té <strong>menys de 10 anys</strong> i està <strong>vacunat</strong>.</li><li>Els <strong>gossos i els gats</strong> poden ser adoptats únicament amb el compliment de l&#39;<strong>anterior requeriment</strong>.</li><li>Els <strong>ocells</strong> podran ser adoptats només si són d&#39;una <strong>raça no salvatge</strong>.</li><li><strong>Ser adoptat implicarà eixir del refugi</strong>, i mostrar un missatge per pantalla amb un acomiadament.</li></ul></li><li>Els <strong>gats</strong> poden participar en <strong>sessions de teràpia</strong> amb humans, sempre que <strong>no tinguen problemes de conducta</strong>. Quan un gat du a terme una sessió de teràpia, el programa ho indicarà.</li><li>Els <strong>ocells</strong> poden fer <strong>exhibicions de vol</strong> durant les jornades de portes obertes, sempre que tinguen <strong>capacitat de vol</strong> i que <strong>no siguen salvatges</strong>.</li></ul><p>El programa mostrarà un menú que permetrà:</p><ul><li>Mostrar la informació bàsica de tots els animats del refugi (codi, espècie, nom i edat).</li><li>Mostrar tota la informació d&#39;un animal a partir del seu codi.</li><li>Afegir un animal, introduint per pantalla tota la informació necessària segons l&#39;espècie.</li><li>Adoptar un animal: permetrà a l&#39;usuari seleccionar quina espècie d&#39;animal es vol adoptar, mostrarà tot el llistat d&#39;eixa espècie amb el seu codi i permetrà seleccionar-ne un. Una vegada adoptat, l&#39;animal quedarà forma del registre del refugi.</li><li>Donat el codi d&#39;un animal, actualitzar la seua edat (sumar 1).</li><li>Donat el codi d&#39;un animal, actualitzar una determinada informació segons l&#39;espècie: <ul><li>Si és gos, no hi ha res que actualitzar.</li><li>Si és gat, es pot actualitzar la seua conducta a la contrària que presente actualment.</li><li>Si és ocell, es pot actualitzar la seua capacitat de volar a la contrària que presente actualment.</li></ul></li><li>Començar sessió de teràpia, amb la qual cosa es mostrarà tot el llistat de gats sense problemes de comportament junt amb el seu codi corresponent, i permetrà a l&#39;usuari seleccionar un.</li><li>Realitzar exhibició, que serà molt paregut al cas anterior. Es mostraran tots els ocells no salvatges i amb capacitat de vol, i l&#39;usuari podrà triar-ne un.</li><li>Eixir del programa.</li></ul><div class="tip custom-block"><p class="custom-block-title">ANOTACIONS</p><p>Per a poder tindre un bon control de tots els animals, resultarà molt úil fer ús d&#39;una estructura que continga tota la informació d&#39;aquests. Una bona opció seria una <strong>estructura clau-valor</strong>, on la clau és l&#39;espècie d&#39;animal i el valor és el llistat dels animals d&#39;eixa espècie.</p><ul><li>Aquesta estructura estarà dins de la classe independent Refugi.</li><li>Tot animal que entre al refugi s&#39;afegirà a aquesta estructura, dins del llistat corresponent a la seua espècie.</li><li>Tot animal que és adoptat s&#39;eliminarà de l&#39;estructura.</li></ul><p>És important aplicar bones pràctiques a l&#39;hora de programar, amb un codi coherent, unes classes ben definides i seguint el <strong>principi d&#39;obert/tancat</strong>. Segons aquest principi, <strong>un programa</strong> realitzat amb bones pràctiques <strong>ha d&#39;estar obert a ampliacions però tancat a modificacions</strong>. Per a aconseguir-ho:</p><ul><li>Les subclasses usaran el constructor de la classe pare.</li><li>Cada classe contindrà els mètodes que afectaran a la pròpia classe i als seus objectes.</li><li>S&#39;evitarà, en la mesura en què siga possible, l&#39;ús de mètodes estàtics.</li></ul><p>El programa consistirà en un bucle infinit que només acabarà si l&#39;usuari selecciona l&#39;opció corresponent. A aquest bucle se&#39;l coneix com bucle principal del programa, i sol estar directament al mètode principal. El bucle principal executarà, en cada iteració, el mètode encarregat de mostrar el menú i un mètode gestor de funcionalitats. Aquest segon serà l&#39;encarregat d&#39;obtindre la selecció de l&#39;usuari i de cridar a la funció corresponent. Tots aquests poden ser mètodes estàtics de la classe principal.</p></div><h2 id="exercicis-nivell-avancat" tabindex="-1">Exercicis - Nivell avançat <a class="header-anchor" href="#exercicis-nivell-avancat" aria-label="Permalink to &quot;Exercicis - Nivell avançat&quot;">​</a></h2><h3 id="exercici-4" tabindex="-1">Exercici 4 <a class="header-anchor" href="#exercici-4" aria-label="Permalink to &quot;Exercici 4&quot;">​</a></h3><p>La cooperativa <em>Cosmolab</em>, dedicada a la investigació espacial, gestiona diversos projectes interns que estudien la viabilitat de colònies fora del planeta Terra. En l’actualitat, treballen amb diferents prototips d’unitats experimentals que poden simular condicions d’hàbitat en diferents entorns, i necessiten una aplicació que els permeta supervisar en tot moment l’estat d’aquestes unitats. Fins ara, cada equip de recerca portava un registre manual, però amb l’arribada de nous membres s’ha decidit centralitzar tota la gestió.</p><p>Tota unitat operativa disposa d’un identificador numèric únic que el distingeix de les altres, i se li assigna un nom. També tenen un temps d&#39;ús (en anys) i l’estat general en què es troba, que pot ser actiu o avariat.</p><p>En l’actualitat, hi ha tres tipus de prototips que funcionen de forma estable i que, per tant, han de poder ser registrats i gestionats: les unitats de cultiu, les d’anàlisi atmosfèric i les de generació d’energia. Cadascuna d’elles té característiques pròpies. Les unitats de cultiu estan especialitzades en simulacions de producció vegetal i compten amb un sistema de gestió d’aigua, que pot estar actiu o no, i una capacitat màxima de plantes que poden allotjar, a més del nombre actual de plantes allotjades i de la potencia en watts que consumeix. Les d’anàlisi atmosfèric enregistren el percentatge mitjà d&#39;oxigen i la concentració mitjana de partícules contaminants detectades, en ppm (partícules per milió). Les unitats energètiques generen una certa potència cadascuna (per fer-ho senzill, serà constant).</p><p>Les diferents unitats són instal·lades de forma conjunta en zones (zona A, zona B, etc.). D&#39;aquesta forma, cada zona és independent de la resta</p><p>Sumat a tot açò, cal tindre en compte que:</p><ul><li>Si el sistema de gestió d&#39;aigua està actiu, el sistema de cultiu consumirà una potència de 100 watts més altres 10 watts per planta.</li><li>En cada unitat de cultiu, el nombre de plantes no pot superar el maxim establit, que serà de 30. El nombre inicial de plantes s&#39;establirà inicialment en 0.</li><li>La potència generada per cada unitat energètica serà aleatòria entre 0.5 kW i 1.5 kW (tindria més sentit incorporar una variabilitat en funció de l&#39;hora, per tal de simular el cicle dia/nit, però ho deixem més senzill).</li><li>Cada zona no podrà tindre més d&#39;una unitat d&#39;anàlisi atmosfèric, i aquests consumiran una potència constant de 300 watts.</li><li>El percentatge mitjà d&#39;oxigen detectat per la unitat d&#39;anàlisi atmosfèric començarà amb un número inicial de 10%, i variarà en funció del número de plantes total de les diverses unitats de cultiu que puga haver en la zona. Cada planta afegirà un valor aleatori comprés entre 0,05% i 0,15% al percentatge mitjà d&#39;oxigen.</li><li>Les partícules contaminants del sistema són degudes, principalment, a elements tòxics que deixen les unitats energètiques. El valor inicial en ppm de les partícules contaminants serà de 0, i anirà augmentant a mesura que es vagen afegint unitats energètiques. D&#39;aquesta forma, aquest nombre augmentarà a raó d&#39;un valor aleatori entre 25 i 75 per cada unitat energètica.</li></ul><p>El sistema proporcionarà a l&#39;usuari formes de modificar la composició dels elements de cada zona, amb la possibilitat d&#39;afegir i eliminar unitats, i de variar alguns paràmetres d&#39;aquests. Només es podran fer aquestes modificacions a zones operatives, que són aquelles que tenen, almenys, una unitat de cada tipus i, a més, almenys una unitat de cultiu té el sistema de gestió d&#39;aigua activat. Addicionalment, les unitats d&#39;anàlisi atmosfèric estan limitades a una per zona. Les opcions que el sistema oferirà a l&#39;usuari seran:</p><ul><li><p>Possibilitat d&#39;afegir noves unitats de cultiu i energètiques.</p></li><li><p>En les unitats de cultiu, possibilitat d&#39;augmentar i disminuir el nombre de plantes, dins del límit establit.</p></li><li><p>També en les unitats de cultiu, possibilitat d&#39;activar o desactivar el sistema de gestió d&#39;aigua. Per a afegir plantes, el sistema ha d&#39;estar actiu. Mentre hi haja plantes, no es podrà desactivar. Per a eliminar la unitat, caldrà primer deixar el nombre de plantes a 0.</p></li><li><p>Anàlisi atmosfèric: es mostra informació sobre el percentatge d&#39;oxigen en l&#39;aire i sobre el nombre mitja de partícules contaminants. En cas de trobar valors fora des valors raonables per a la vida, informarà.</p><ul><li>Els valors buscats d&#39;oxigen mitjà a l&#39;aire són entre 16% i 21%.</li><li>Els valors acceptables de partícules contaminants seran mai superiors a 100 ppm.</li><li>Com cada anàlisi agafa mostres d&#39;aire diferents, sempre cap algun error en les dades. El percentatge d&#39;oxigen pot variar en cada anàlisi de forma aleatoria en ±1% respecte del valor real, i les partícules contaminants poden variar en ±5 ppm.</li></ul></li><li><p>Anàlisi energètic: es mostra la informació de la potència disponible en el sistema i de la consumida, amb el detall desglossat per cada elements que en fa ús.</p><details class="details custom-block"><summary>Exemple d&#39;eixida d&#39;anàlisi energètic</summary><div class="language-plaintext vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">plaintext</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>ANÀLISI ENERGÈTIC DEL SISTEMA</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Potència total disponible: 973 W</span></span>
<span class="line"><span>Potència total consumida: 790 W</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Distribució del consum:</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Unitat de cultiu 1: 320 W</span></span>
<span class="line"><span>  -&gt; Sistema de gestió d&#39;aigua actiu: 100 W</span></span>
<span class="line"><span>  -&gt; Potència consumida per planta (22): 220 W </span></span>
<span class="line"><span></span></span>
<span class="line"><span>Unitat de cultiu 2:  170 W</span></span>
<span class="line"><span>  -&gt; Sistema de gestió d&#39;aigua actiu: 100 W</span></span>
<span class="line"><span>  -&gt; Potència consumida per planta (7): 70 W </span></span>
<span class="line"><span></span></span>
<span class="line"><span>Unitats d’anàlisi atmosfèrica: 300 W</span></span></code></pre></div></details></li><li><p>Solucionar les unitats avariades.</p></li></ul><p>Tant les unitats energètiques com les d&#39;anàlisi atmosfèric es poden avariar, però en cadascuna el mal funcionament tindrà una naturalesa diferent:</p><ul><li>Les unitats energètiques poden, de sobte, oferir fins a un 20% menys de la potència que deurien. Aquest comportament inesperat pot ocórrer en qualsevol moment que l&#39;usuari demane un anàlisi energètic, amb una probabilitat d&#39;avaria del 5% més un 2% addicional per cada any d&#39;ús que tinga. Si la potència oferida cau per baix de la consumida, es considera que es perd la zona.</li><li>Les unitats d&#39;anàlisi atmosfèric poden, de sobte, donar dades completament incorrectes si s&#39;avarien, cosa que pot passar en una probabilitat del 10% més un altre 1% per cada any d&#39;ús, i pot ocórrer cada vegada que l&#39;usuari fa un anàlisi atmosfèric.</li><li>Ambdues situacions es poden solucionar. L&#39;usuari sempre tindrà accés a l&#39;opció que permet solucionar les avaries en cadascun dels dos tipus d&#39;unitats, però en cas de seleccionar aquesta opció sense que la unitat estiga avariada es mostrarà un missatge informant que ningun mal funcionament ha sigut detectat. En cas de sí haver, es solucionarà.</li></ul>`,32))])}const A=c(d,[["render",b]]);export{x as __pageData,A as default};
